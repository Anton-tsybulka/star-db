[{"D:\\HomeWork\\stackReact\\star-db\\src\\index.js":"1","D:\\HomeWork\\stackReact\\star-db\\src\\components\\App\\App.js":"2","D:\\HomeWork\\stackReact\\star-db\\src\\components\\Header\\Header.js":"3","D:\\HomeWork\\stackReact\\star-db\\src\\components\\RandomPlanet\\RandomPlanet.js":"4","D:\\HomeWork\\stackReact\\star-db\\src\\components\\ItemList\\ItemList.js":"5","D:\\HomeWork\\stackReact\\star-db\\src\\services\\swapiService.js":"6","D:\\HomeWork\\stackReact\\star-db\\src\\components\\Spinner\\Spinner.js":"7","D:\\HomeWork\\stackReact\\star-db\\src\\components\\ErrorIndicator\\ErrorIndicator.js":"8","D:\\HomeWork\\stackReact\\star-db\\src\\services\\SwapiService.js":"9","D:\\HomeWork\\stackReact\\star-db\\src\\components\\PeoplePage\\PeoplePage.js":"10","D:\\HomeWork\\stackReact\\star-db\\src\\components\\Row\\Row.js":"11","D:\\HomeWork\\stackReact\\star-db\\src\\components\\ErrorBoundry\\ErrorBoundry.js":"12","D:\\HomeWork\\stackReact\\star-db\\src\\components\\ItemDetails\\ItemDetails.js":"13"},{"size":187,"mtime":1610403101462,"results":"14","hashOfConfig":"15"},{"size":1983,"mtime":1612201623420,"results":"16","hashOfConfig":"15"},{"size":643,"mtime":1610401952847,"results":"17","hashOfConfig":"15"},{"size":2782,"mtime":1611326059403,"results":"18","hashOfConfig":"15"},{"size":884,"mtime":1612207357145,"results":"19","hashOfConfig":"15"},{"size":2480,"mtime":1610708217007,"results":"20","hashOfConfig":"15"},{"size":333,"mtime":1611157344176,"results":"21","hashOfConfig":"15"},{"size":381,"mtime":1610638968771,"results":"22","hashOfConfig":"15"},{"size":2819,"mtime":1611858878959,"results":"23","hashOfConfig":"15"},{"size":999,"mtime":1611857356776,"results":"24","hashOfConfig":"15"},{"size":381,"mtime":1611854894702,"results":"25","hashOfConfig":"15"},{"size":501,"mtime":1611855691944,"results":"26","hashOfConfig":"15"},{"size":1913,"mtime":1612207559907,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1216qqb",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},"D:\\HomeWork\\stackReact\\star-db\\src\\index.js",[],["59","60"],"D:\\HomeWork\\stackReact\\star-db\\src\\components\\App\\App.js",[],"D:\\HomeWork\\stackReact\\star-db\\src\\components\\Header\\Header.js",["61","62","63","64"],"import React from 'react'\r\n\r\nimport './Header.css'\r\n\r\nconst Header = () => {\r\n\r\n    return(\r\n        <div className=\"header d-flex\">\r\n            <h3>\r\n                <a href='#'>\r\n                    Star DB\r\n                </a>                \r\n            </h3>\r\n            <ul className=\"d-flex\">\r\n                <li>\r\n                    <a href='#'>People</a>\r\n                </li>\r\n                <li>\r\n                    <a href='#'>Planets</a>\r\n                </li>\r\n                <li>\r\n                    <a href='#'>Starchip</a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","D:\\HomeWork\\stackReact\\star-db\\src\\components\\RandomPlanet\\RandomPlanet.js",["65"],"import React, { Component } from 'react'\r\n\r\nimport SwapiService from '../../services/SwapiService'\r\nimport ErrorIndicator from '../ErrorIndicator/ErrorIndicator'\r\nimport Spinner from '../Spinner/Spinner'\r\n\r\nimport './RandomPlanet.css'\r\n\r\nexport default class RandomPlanet extends Component {\r\n\r\n    swapiService = new SwapiService()\r\n\r\n    state = {\r\n        planet: {},\r\n        loading: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updatePlanet()\r\n        this.interval = setInterval(this.updatePlanet, 10000)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval)\r\n    }\r\n\r\n    onPlanetLoaded = (planet) => {\r\n        this.setState({\r\n            planet,\r\n            loading: false,\r\n            error: false})\r\n    }\r\n\r\n    onError = (err) => {\r\n        this.setState({\r\n            error: true,\r\n            loading: false\r\n        })\r\n    }\r\n\r\n    updatePlanet = () => {\r\n        const id = Math.floor(Math.random() * 15) + 3\r\n        this.swapiService\r\n            .getPlanet(id)\r\n            .then(this.onPlanetLoaded)\r\n            .catch(this.onError)            \r\n    }\r\n\r\n    render() {\r\n        const {planet, loading, error} = this.state,\r\n               hasData = !(loading || error),\r\n               errorMessage = error ? <ErrorIndicator /> : null,\r\n               spinner = loading ? <Spinner /> : null,\r\n               content = hasData ? <PlanetView planet={planet} /> : null\r\n\r\n        return(\r\n            <div className=\"random-planet jumbotron rounded\">\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst PlanetView = ({planet}) => {\r\n    const {id, name, population, rotationPeriod, diameter} = planet\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <img className=\"planet-image\"\r\n                     src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`} />\r\n                <div>\r\n                    <h4>{name}</h4>\r\n                    <ul className=\"list-group list-group-flush\">\r\n                        <li className=\"list-group-item\">\r\n                            <span className=\"term\">Population</span>\r\n                            <span>{population}</span>\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            <span className=\"term\">Rotation Period</span>\r\n                            <span>{rotationPeriod}</span>\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            <span className=\"term\">Diametr</span>\r\n                            <span>{diameter}</span>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n        </React.Fragment>\r\n    )\r\n}","D:\\HomeWork\\stackReact\\star-db\\src\\components\\ItemList\\ItemList.js",[],["66","67"],"D:\\HomeWork\\stackReact\\star-db\\src\\services\\swapiService.js",[],"D:\\HomeWork\\stackReact\\star-db\\src\\components\\Spinner\\Spinner.js",[],"D:\\HomeWork\\stackReact\\star-db\\src\\components\\ErrorIndicator\\ErrorIndicator.js",[],"D:\\HomeWork\\stackReact\\star-db\\src\\services\\SwapiService.js",[],"D:\\HomeWork\\stackReact\\star-db\\src\\components\\PeoplePage\\PeoplePage.js",[],"D:\\HomeWork\\stackReact\\star-db\\src\\components\\Row\\Row.js",[],"D:\\HomeWork\\stackReact\\star-db\\src\\components\\ErrorBoundry\\ErrorBoundry.js",[],"D:\\HomeWork\\stackReact\\star-db\\src\\components\\ItemDetails\\ItemDetails.js",["68"],"import React, { Component } from 'react'\r\n\r\nimport SwapiService from '../../services/SwapiService'\r\nimport Spinner from '../Spinner/Spinner'\r\n\r\nimport './ItemDetails.css'\r\n\r\nconst Record = ({label, field, item}) => {\r\n    return(\r\n    <li className=\"list-group-item\">\r\n        <span className=\"term\">{label}</span>\r\n        <span>{item[field]}</span>\r\n    </li>\r\n    )\r\n}\r\n\r\nexport {\r\n    Record\r\n}\r\n\r\nexport default class ItemDetails extends Component {\r\n\r\n    swapiService = new SwapiService()\r\n\r\n    state = {\r\n        item: null,\r\n        image: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updatePerson()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.itemId !== prevProps.itemId) {\r\n            this.updatePerson()            \r\n        }\r\n    }\r\n\r\n    updatePerson() {\r\n        const {itemId, getData, getImageUrl} = this.props\r\n        if (!itemId) {\r\n            return            \r\n        }\r\n\r\n    getData(itemId)\r\n        .then((item) => {\r\n            this.setState({\r\n                item,\r\n                image: getImageUrl(item)\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const {item, image} = this.state\r\n        if (!item) {\r\n            return <Spinner />\r\n        }\r\n\r\n        const {name} = item\r\n\r\n        return(\r\n            <div className=\"item-details jumbotron rounded\">\r\n                <img className=\"item-image\"\r\n                     src={image} />\r\n                <div className=\"card-body\">\r\n                    <h4>{name}</h4>\r\n                    <ul className=\"list-group list-group-flush\">\r\n                       {\r\n                           React.Children.map(this.props.children, (child) =>{\r\n                               return React.cloneElement(child, {item})\r\n                           })\r\n                       }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n",{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":10,"column":17,"nodeType":"75","endLine":10,"endColumn":29},{"ruleId":"73","severity":1,"message":"74","line":16,"column":21,"nodeType":"75","endLine":16,"endColumn":33},{"ruleId":"73","severity":1,"message":"74","line":19,"column":21,"nodeType":"75","endLine":19,"endColumn":33},{"ruleId":"73","severity":1,"message":"74","line":22,"column":21,"nodeType":"75","endLine":22,"endColumn":33},{"ruleId":"76","severity":1,"message":"77","line":71,"column":13,"nodeType":"75","endLine":72,"endColumn":94},{"ruleId":"69","replacedBy":"78"},{"ruleId":"71","replacedBy":"79"},{"ruleId":"76","severity":1,"message":"77","line":67,"column":17,"nodeType":"75","endLine":68,"endColumn":36},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["80"],["81"],"no-global-assign","no-unsafe-negation"]